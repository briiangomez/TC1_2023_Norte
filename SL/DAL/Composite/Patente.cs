///////////////////////////////////////////////////////////
//  Patente.cs
//  Implementation of the Class Patente
//  Generated by Enterprise Architect
//  Created on:      05-may.-2023 20:18:35
//  Original author: Navegador
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;


namespace SL.DAL.Composite
{
	/// <summary>
	/// This class (a) represents leaf objects in the composition, and (b) defines
	/// behaviour for primitive objects in the composition.
	/// </summary>
	public class Patente : Component {

        public string Name { get; set; }

        public string formName { get; set; }

        public Patente(){

		}

		public override int GetChild()
        {
			return 0;
        }

		/// 
		/// <param name="component"></param>
		public override void Add(Component component){

			//// cannot add to a leaf
			throw new Exception("No se puede agregar un componente");

		}

		/// 
		/// <param name="component"></param>
		public override void Remove(Component component){

			//// cannot remove from a leaf
			throw new Exception("No se puede eliminar un componente");

		}

	}//end Patente

}//end namespace Patrones